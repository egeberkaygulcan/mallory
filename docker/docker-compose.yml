version: '3.7'

x-node:
  &default-node
  image: jepsen_node
  env_file: ./secret/node.env
  secrets:
    - authorized_keys
  tty: true
  tmpfs:
    - /run:size=100M
    - /run/lock:size=100M
  cgroup_parent: docker.slice
  volumes:
    - "jepsen-shared:/var/jepsen/shared"
    - "../jepsen:/host"
    # - "/dev:/dev"
    - "/lib/modules:/lib/modules"
  devices:
    - "/dev/fuse"
  security_opt:
    - apparmor:unconfined
    - seccomp=unconfined
  networks:
    - jepsen
  privileged: true
  cap_add:
    - ALL
  ports:
    - ${JEPSEN_PORT:-22}

volumes:
  jepsen-shared:
  redis-logs:

secrets:
  authorized_keys:
    file: ./secret/authorized_keys

networks:
  jepsen:
    driver: bridge

services:
  _build_node_image:
    image: jepsen_node
    build: ./node
    scale: 0

  control:
    container_name: jepsen-control
    hostname: control
    depends_on:
      - n3
    build: ./control
    image: jepsen_control
    env_file: ./secret/control.env
    privileged: true
    ports:
      - "22"
      - "8080:8080"
      - "5000:5000"
    dns:
      - "127.0.0.1"
      - "8.8.8.8"
    networks:
      - jepsen
    volumes:
      - "jepsen-shared:/var/jepsen/shared"
      - "../:/host"

  n1:
    << : *default-node
    container_name: jepsen-n1
    # volumes:
    #   - redis-logs:/opt/redis-log
    hostname: n1
    depends_on:
      - _build_node_image

  n2:
    << : *default-node
    container_name: jepsen-n2
    # volumes:
    #   - redis-logs:/opt/redis-log
    hostname: n2
    depends_on:
      - _build_node_image
      - n1

  n3:
    << : *default-node
    container_name: jepsen-n3
    # volumes:
    #   - redis-logs:/opt/redis-log
    hostname: n3
    depends_on:
      - _build_node_image
      - n2
